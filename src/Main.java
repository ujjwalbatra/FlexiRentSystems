
/*
 *
 * @project - FlexiRentSystems
 * @author - ujjwalbatra
 *
 */

import javafx.application.Application;
import javafx.stage.Stage;
import model.DataFinder;
import utility.exception.InvalidOperationException;
import view.AlertBox;
import view.MainUI;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

public class Main extends Application {


    @Override
    public void start(Stage primaryStage) {
        MainUI mainUI = new MainUI();

        //used to create tables in the first time.
        //this.createTableRentalPropertyAndRecords();

        //populating the main page in another thread
        DataFinder dataFinder = new DataFinder(mainUI);
        try {
            dataFinder.showAllProperties();
        } catch (InvalidOperationException e) {
            new AlertBox().generateWarningAlertBox(e.getTitle(), e.getHeader(), e.getMessage());
        }

        mainUI.generateMainPage();
    }

    //used to create tables only for the first time
    private void createTableRentalPropertyAndRecords() {
        try (
                Connection connection = DriverManager.getConnection("jdbc:hsqldb:file:database/localhost", "SA", "");
                Statement statement = connection.createStatement()
        ) {
            Class.forName("org.hsqldb.jdbc.JDBCDriver");

            System.err.println("SQL Connection established");

            int result;

            //drop table used only when table already exist
            String dropTable = "drop table RentalRecord;";
            result = statement.executeUpdate(dropTable);

            if (result == 0)
                System.err.println("rental record table dropped");

            String dropTable2 = "drop table RentalProperty;";
            result = statement.executeUpdate(dropTable2);

            if (result == 0)
                System.err.println("rental property table dropped");

            String createTable = "CREATE TABLE RentalProperty ("
                    + "rowID INT GENERATED BY DEFAULT AS IDENTITY(START WITH 100, INCREMENT BY 1) PRIMARY KEY,"
                    + "propertyID VARCHAR(100) UNIQUE,"
                    + "streetNumber INT NOT NULL,"
                    + "streetName VARCHAR(50) NOT NULL,"
                    + "suburb VARCHAR(20) NOT NULL,"
                    + "propertyType VARCHAR(20) NOT NULL,"
                    + "numberOfBedrooms INTEGER NOT NULL,"
                    + "rentalRate DOUBLE NOT NULL,"
                    + "propertyStatus VARCHAR(20) NOT NULL,"
                    + "lastMaintenanceDate VARCHAR(10),"
                    + "description VARCHAR(100),"
                    + "imagePath VARCHAR(100) ,"
                    + ");";

            statement.executeUpdate(createTable);

            //making rental record a weak entity
            String createTable2 = "CREATE TABLE RentalRecord ("
                    + "rowID INT generated BY DEFAULT AS IDENTITY ,"
                    + "recordID VARCHAR(100) UNIQUE, "
                    + "propertyID VARCHAR(100),"
                    + "rentDate VARCHAR(10) NOT NULL,"
                    + "estimatedReturnDate VARCHAR(10) NOT NULL,"
                    + "actualReturnDate VARCHAR(10),"
                    + "rentalFee DOUBLE,"
                    + "lateFee DOUBLE,"
                    + "custID VARCHAR(100) NOT NULL,"
                    + "FOREIGN KEY (propertyID) REFERENCES RentalProperty (propertyID) ON DELETE CASCADE,"
                    + "PRIMARY KEY (rowID, propertyID)"
                    + ");";


            statement.executeUpdate(createTable2);


        } catch (SQLException | ClassNotFoundException e) {
            new AlertBox().generateWarningAlertBox("Error", "System error", "There was error with the system.");
        }

    }
}

